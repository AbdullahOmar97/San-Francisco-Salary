{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":4322447,"sourceType":"datasetVersion","datasetId":2545639}],"dockerImageVersionId":30301,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Dataset Analysis\n\n**Name:** Abdullah Omar  \n**Date:** 2024-05-30  \n**Title:** San Francisco Salary  \n**Description:** This dataset contains information about the salaries of employees in San Francisco. It includes details such as job titles, departments, base pay, overtime pay, and total pay, among other attributes.\n\n## Dataset Overview\n\nThis dataset can be used to analyze salary trends, understand compensation structures, and identify patterns in employee earnings within the San Francisco public sector.\n","metadata":{}},{"cell_type":"markdown","source":"# Display the first 5 rows in the dataset","metadata":{}},{"cell_type":"code","source":"import pandas as pd\n\n# Load the dataset\nfile_path = '/kaggle/input/sanfrancisco-salary-3-years/SanFrancisco_salary (csv).csv'\ndf = pd.read_csv(file_path)\n\n# Display the first few rows of the dataframe\ndf.head()\n","metadata":{"execution":{"iopub.status.busy":"2024-05-29T23:45:29.575330Z","iopub.execute_input":"2024-05-29T23:45:29.576102Z","iopub.status.idle":"2024-05-29T23:45:29.878967Z","shell.execute_reply.started":"2024-05-29T23:45:29.576043Z","shell.execute_reply":"2024-05-29T23:45:29.877545Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Display rows from row 40 to 50  ","metadata":{}},{"cell_type":"code","source":"df.iloc[40:51]\n","metadata":{"execution":{"iopub.status.busy":"2024-05-29T23:46:43.086952Z","iopub.execute_input":"2024-05-29T23:46:43.087401Z","iopub.status.idle":"2024-05-29T23:46:43.112200Z","shell.execute_reply.started":"2024-05-29T23:46:43.087363Z","shell.execute_reply":"2024-05-29T23:46:43.110924Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Find the job title of the highest paid salary (TotalPay)\n","metadata":{}},{"cell_type":"code","source":"# Find the row with the highest TotalPay\nhighest_paid_row = df[df['TotalPay'] == df['TotalPay'].max()]\n\n# Retrieve the JobTitle from that row\nhighest_paid_job_title = highest_paid_row['JobTitle'].values[0]\n\nhighest_paid_job_title\n","metadata":{"execution":{"iopub.status.busy":"2024-05-29T23:47:15.356935Z","iopub.execute_input":"2024-05-29T23:47:15.357326Z","iopub.status.idle":"2024-05-29T23:47:15.368995Z","shell.execute_reply.started":"2024-05-29T23:47:15.357296Z","shell.execute_reply":"2024-05-29T23:47:15.367893Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Find the average BasePay of Executive Contract Employee (JobTitle)","metadata":{}},{"cell_type":"code","source":"# Filter the dataframe for the specified JobTitle\nexecutive_contract_employees = df[df['JobTitle'] == 'Executive Contract Employee']\n\n# Calculate the average BasePay\naverage_base_pay = executive_contract_employees['BasePay'].mean()\n\naverage_base_pay","metadata":{"execution":{"iopub.status.busy":"2024-05-29T23:48:41.897023Z","iopub.execute_input":"2024-05-29T23:48:41.897517Z","iopub.status.idle":"2024-05-29T23:48:41.916364Z","shell.execute_reply.started":"2024-05-29T23:48:41.897478Z","shell.execute_reply":"2024-05-29T23:48:41.914956Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Find the sum of OvertimePay for each job title","metadata":{}},{"cell_type":"code","source":"# Calculate the sum of OvertimePay for each job title\novertime_pay_sum_by_job_title = df.groupby('JobTitle')['OvertimePay'].sum()\n\n# Display the result\novertime_pay_sum_by_job_title","metadata":{"execution":{"iopub.status.busy":"2024-05-29T23:49:11.078367Z","iopub.execute_input":"2024-05-29T23:49:11.078838Z","iopub.status.idle":"2024-05-29T23:49:11.114412Z","shell.execute_reply.started":"2024-05-29T23:49:11.078800Z","shell.execute_reply":"2024-05-29T23:49:11.113094Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Which job title have spend more for OvertimePay (optional)","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# What is the most common and the least common job in this dataset","metadata":{}},{"cell_type":"code","source":"# Count the occurrences of each job title\njob_title_counts = df['JobTitle'].value_counts()\n\n# Find the most common job title\nmost_common_job_title = job_title_counts.idxmax()\nmost_common_job_count = job_title_counts.max()\n\n# Find the least common job title\nleast_common_job_title = job_title_counts.idxmin()\nleast_common_job_count = job_title_counts.min()\n\nmost_common_job_title, most_common_job_count, least_common_job_title, least_common_job_count\n","metadata":{"execution":{"iopub.status.busy":"2024-05-29T23:49:49.093895Z","iopub.execute_input":"2024-05-29T23:49:49.094323Z","iopub.status.idle":"2024-05-29T23:49:49.118077Z","shell.execute_reply.started":"2024-05-29T23:49:49.094290Z","shell.execute_reply":"2024-05-29T23:49:49.116588Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# What is the job title for Susan Currin","metadata":{}},{"cell_type":"code","source":"# Filter the dataframe for the specified EmployeeName\nsusan_currin_info = df[df['EmployeeName'] == 'Susan Currin']\n\n# Retrieve the JobTitle from the filtered dataframe\nsusan_currin_job_title = susan_currin_info['JobTitle'].values[0]\n\nsusan_currin_job_title\n","metadata":{"execution":{"iopub.status.busy":"2024-05-29T23:50:05.174845Z","iopub.execute_input":"2024-05-29T23:50:05.175247Z","iopub.status.idle":"2024-05-29T23:50:05.193559Z","shell.execute_reply.started":"2024-05-29T23:50:05.175216Z","shell.execute_reply":"2024-05-29T23:50:05.192262Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Find the mean , standard deviation and the median for TotalPay in this dataset \n","metadata":{}},{"cell_type":"code","source":"# Calculate mean, standard deviation, and median for TotalPay\nmean_total_pay = df['TotalPay'].mean()\nstd_total_pay = df['TotalPay'].std()\nmedian_total_pay = df['TotalPay'].median()\n\nmean_total_pay, std_total_pay, median_total_pay\n","metadata":{"execution":{"iopub.status.busy":"2024-05-29T23:50:32.837606Z","iopub.execute_input":"2024-05-29T23:50:32.838695Z","iopub.status.idle":"2024-05-29T23:50:32.856670Z","shell.execute_reply.started":"2024-05-29T23:50:32.838649Z","shell.execute_reply":"2024-05-29T23:50:32.854978Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# How many standard deviation does Captain, Fire Suppression highest salary (TotalPay) deviate from the mean \n\nhint : z index\n","metadata":{}},{"cell_type":"code","source":"# Calculate mean and standard deviation for TotalPay\nmean_total_pay = df['TotalPay'].mean()\nstd_total_pay = df['TotalPay'].std()\n\n# Filter the dataframe for the job title \"Captain, Fire Suppression\"\ncaptain_fire_suppression = df[df['JobTitle'] == 'CAPTAIN, FIRE SUPPRESSION']\n\n# Find the highest salary (TotalPay) for \"Captain, Fire Suppression\"\nhighest_salary = captain_fire_suppression['TotalPay'].max()\n\n# Calculate the z-index\nz_index = (highest_salary - mean_total_pay) / std_total_pay\n\nz_index\n","metadata":{"execution":{"iopub.status.busy":"2024-05-29T23:52:55.226734Z","iopub.execute_input":"2024-05-29T23:52:55.227151Z","iopub.status.idle":"2024-05-29T23:52:55.249062Z","shell.execute_reply.started":"2024-05-29T23:52:55.227118Z","shell.execute_reply":"2024-05-29T23:52:55.247447Z"},"trusted":true},"execution_count":null,"outputs":[]}]}